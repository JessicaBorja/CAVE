CreateDataLoader:batch_size integer [32, 500] [126]log
Imputation:strategy categorical {median, most_frequent, mean} [median]
InitializationSelector:initialization_method categorical {sparse, default} [sparse]
InitializationSelector:initializer:initialize_bias categorical {Yes, No, Zero} [Yes]
LearningrateSchedulerSelector:lr_scheduler categorical {cosine_annealing, plateau} [cosine_annealing]
LossModuleSelector:loss_module categorical {cross_entropy_weighted, cross_entropy} [cross_entropy_weighted]
NetworkSelector:network categorical {shapedresnet} [shapedresnet]
NormalizationStrategySelector:normalization_strategy categorical {minmax, maxabs, standardize, none} [minmax]
OptimizerSelector:optimizer categorical {adamw, adam, sgd, rmsprop} [adamw]
PreprocessorSelector:preprocessor categorical {power_transformer, truncated_svd, none} [power_transformer]
ResamplingStrategySelector:over_sampling_method categorical {smote} [smote]
ResamplingStrategySelector:target_size_strategy categorical {median, upsample, none} [median]
ResamplingStrategySelector:under_sampling_method categorical {random, none} [random]
TrainNode:batch_loss_computation_technique categorical {mixup, standard} [mixup]
InitializationSelector:sparse:sparsity categorical {0.9} [0.9]
LearningrateSchedulerSelector:cosine_annealing:T_max integer [10, 500] [255]
LearningrateSchedulerSelector:cosine_annealing:eta_min categorical {1e-08} [1e-08]
LearningrateSchedulerSelector:plateau:factor real [0.05, 0.5] [0.275]
LearningrateSchedulerSelector:plateau:patience integer [3, 10] [6]
NetworkSelector:shapedresnet:activation categorical {sigmoid, tanh, relu} [sigmoid]
NetworkSelector:shapedresnet:blocks_per_group integer [1, 4] [2]
NetworkSelector:shapedresnet:max_units integer [10, 1024] [101]log
NetworkSelector:shapedresnet:num_groups integer [1, 9] [5]
NetworkSelector:shapedresnet:resnet_shape categorical {funnel, long_funnel, diamond, hexagon, brick, triangle, stairs} [funnel]
NetworkSelector:shapedresnet:use_dropout categorical {True, False} [True]
NetworkSelector:shapedresnet:use_shake_drop categorical {True, False} [True]
NetworkSelector:shapedresnet:use_shake_shake categorical {True, False} [True]
OptimizerSelector:adam:learning_rate real [0.0001, 0.1] [0.0031622777]log
OptimizerSelector:adam:weight_decay real [1e-05, 0.1] [0.050005]
OptimizerSelector:adamw:learning_rate real [0.0001, 0.1] [0.0031622777]log
OptimizerSelector:adamw:weight_decay real [1e-05, 0.1] [0.050005]
OptimizerSelector:rmsprop:alpha real [0.1, 0.99] [0.545]
OptimizerSelector:rmsprop:learning_rate real [0.0001, 0.1] [0.0031622777]log
OptimizerSelector:rmsprop:momentum real [0.1, 0.99] [0.545]
OptimizerSelector:rmsprop:weight_decay real [1e-05, 0.1] [0.050005]
OptimizerSelector:sgd:learning_rate real [0.0001, 0.1] [0.0031622777]log
OptimizerSelector:sgd:momentum real [0.1, 0.99] [0.545]
OptimizerSelector:sgd:weight_decay real [1e-05, 0.1] [0.050005]
PreprocessorSelector:power_transformer:method categorical {yeo-johnson, box-cox} [yeo-johnson]
PreprocessorSelector:power_transformer:standardize categorical {True, False} [True]
PreprocessorSelector:truncated_svd:target_dim integer [10, 256] [133]
ResamplingStrategySelector:smote:k_neighbors integer [3, 7] [5]
TrainNode:mixup:alpha real [0.0, 1.0] [0.5]
NetworkSelector:shapedresnet:max_dropout real [0.0, 0.8] [0.4]
NetworkSelector:shapedresnet:max_shake_drop_probability real [0.0, 1.0] [0.5]

InitializationSelector:sparse:sparsity | InitializationSelector:initialization_method == sparse
LearningrateSchedulerSelector:cosine_annealing:T_max | LearningrateSchedulerSelector:lr_scheduler == cosine_annealing
LearningrateSchedulerSelector:cosine_annealing:eta_min | LearningrateSchedulerSelector:lr_scheduler == cosine_annealing
LearningrateSchedulerSelector:plateau:factor | LearningrateSchedulerSelector:lr_scheduler == plateau
LearningrateSchedulerSelector:plateau:patience | LearningrateSchedulerSelector:lr_scheduler == plateau
NetworkSelector:shapedresnet:activation | NetworkSelector:network == shapedresnet
NetworkSelector:shapedresnet:blocks_per_group | NetworkSelector:network == shapedresnet
NetworkSelector:shapedresnet:max_units | NetworkSelector:network == shapedresnet
NetworkSelector:shapedresnet:num_groups | NetworkSelector:network == shapedresnet
NetworkSelector:shapedresnet:resnet_shape | NetworkSelector:network == shapedresnet
NetworkSelector:shapedresnet:use_dropout | NetworkSelector:network == shapedresnet
NetworkSelector:shapedresnet:use_shake_drop | NetworkSelector:network == shapedresnet
NetworkSelector:shapedresnet:use_shake_shake | NetworkSelector:network == shapedresnet
OptimizerSelector:adam:learning_rate | OptimizerSelector:optimizer == adam
OptimizerSelector:adam:weight_decay | OptimizerSelector:optimizer == adam
OptimizerSelector:adamw:learning_rate | OptimizerSelector:optimizer == adamw
OptimizerSelector:adamw:weight_decay | OptimizerSelector:optimizer == adamw
OptimizerSelector:rmsprop:alpha | OptimizerSelector:optimizer == rmsprop
OptimizerSelector:rmsprop:learning_rate | OptimizerSelector:optimizer == rmsprop
OptimizerSelector:rmsprop:momentum | OptimizerSelector:optimizer == rmsprop
OptimizerSelector:rmsprop:weight_decay | OptimizerSelector:optimizer == rmsprop
OptimizerSelector:sgd:learning_rate | OptimizerSelector:optimizer == sgd
OptimizerSelector:sgd:momentum | OptimizerSelector:optimizer == sgd
OptimizerSelector:sgd:weight_decay | OptimizerSelector:optimizer == sgd
PreprocessorSelector:power_transformer:method | PreprocessorSelector:preprocessor == power_transformer
PreprocessorSelector:power_transformer:standardize | PreprocessorSelector:preprocessor == power_transformer
PreprocessorSelector:truncated_svd:target_dim | PreprocessorSelector:preprocessor == truncated_svd
ResamplingStrategySelector:smote:k_neighbors | ResamplingStrategySelector:over_sampling_method == smote
TrainNode:mixup:alpha | TrainNode:batch_loss_computation_technique == mixup
NetworkSelector:shapedresnet:max_dropout | NetworkSelector:shapedresnet:use_dropout == True
NetworkSelector:shapedresnet:max_shake_drop_probability | NetworkSelector:shapedresnet:use_shake_drop == True